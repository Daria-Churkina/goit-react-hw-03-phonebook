{"version":3,"sources":["Components/ContactsItem.jsx","Components/ContactsList.jsx","Components/FilterInput.jsx","Components/PhoneBook.jsx","Components/Section.jsx","Components/storage.jsx","App.js","index.js"],"names":["ContactsItem","contact","id","name","number","deleteContact","className","onClick","ContactsList","contacts","length","map","FilterInput","filter","filterInput","type","value","onChange","PhoneBook","state","handleChange","e","setState","target","contactsVerification","props","some","submitForm","preventDefault","alert","newContact","uuidv4","getContactInfo","onSubmit","this","pattern","title","Component","Section","children","storage","load","key","keyState","localStorage","getItem","undefined","JSON","parse","err","console","error","save","stringify","setItem","App","prevState","contactsFilter","toLowerCase","includes","loadContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.142d7ab2.chunk.js","sourcesContent":["import React from 'react';\n\nconst ContactsItem = ({ contact: { id, name, number }, deleteContact }) => (\n  <li className=\"contactItem\">\n    <p>\n      {name} : {number}\n    </p>\n    <button id={id} onClick={deleteContact} className=\"deleteContactButton\">\n      Delete\n    </button>\n  </li>\n);\n\nexport default ContactsItem;\n","import React from 'react';\nimport ContactsItem from './ContactsItem';\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n  if (contacts.length) {\n    return (\n      <ul className=\"contactList\">\n        {contacts.map(contact => (\n          <ContactsItem\n            key={contact.id}\n            contact={contact}\n            deleteContact={deleteContact}\n          />\n        ))}\n      </ul>\n    );\n  } else {\n    return <h3>Add new contact</h3>;\n  }\n};\n\nexport default ContactsList;\n","import React from 'react';\n\nconst FilterInput = ({ filter, filterInput }) => (\n  <label>\n    Find contacts by name\n    <input type=\"text\" value={filter} name=\"filter\" onChange={filterInput} />\n  </label>\n);\n\nexport default FilterInput;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass PhoneBook extends Component {\n  state = { name: '', number: '' };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  contactsVerification = () => {\n    return this.props.contacts.some(\n      contact => contact.name === this.state.name,\n    );\n  };\n\n  submitForm = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (this.contactsVerification()) {\n      alert('!!!');\n    } else {\n      const newContact = { id: uuidv4(), name, number };\n      this.props.getContactInfo(newContact);\n      this.setState({ name: '', number: '' });\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.submitForm}>\n        <label className=\"label name\">\n          Enter name\n          <input\n            type=\"text\"\n            value={this.state.name}\n            name=\"name\"\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className=\"label number\">\n          Ð•nter number (7 to 9 digits)\n          <input\n            type=\"tel\"\n            value={this.state.number}\n            name=\"number\"\n            onChange={this.handleChange}\n            pattern=\"[0-9]{7,9}\"\n            title=\"7 to 9 digits allowed\"\n          />\n        </label>\n        <button type=\"submit\" className=\"addContact\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default PhoneBook;\n","import React from 'react';\n\nconst Section = ({ title, children }) => (\n  <section className=\"section\">\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Section;\n","const load = key => {\n  try {\n    const keyState = localStorage.getItem(key);\n\n    return keyState === null ? undefined : JSON.parse(keyState);\n  } catch (err) {\n    return console.error('Get state error: ', err);\n  }\n};\n\nconst save = (key, value) => {\n  try {\n    const keyState = JSON.stringify(value);\n    localStorage.setItem(key, keyState);\n  } catch (err) {\n    console.error('Set state error: ', err);\n  }\n};\n\nconst storage = {\n  load,\n  save,\n};\n\nexport default storage;\n","import React, { Component } from 'react';\nimport ContactsList from './Components/ContactsList';\nimport FilterInput from './Components/FilterInput';\nimport PhoneBook from './Components/PhoneBook';\nimport Section from './Components/Section';\nimport './Components/styles.css';\nimport storage from './Components/storage';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const loadContacts = storage.load('contacts');\n    if (loadContacts) {\n      this.setState({ contacts: loadContacts });\n    }\n  }\n\n  componentDidUpdate() {\n    const { contacts } = this.state;\n    storage.save('contacts', contacts);\n  }\n\n  getContactInfo = newContact => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  filterInput = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  contactsFilter = () => {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n  };\n\n  deleteContact = e => {\n    const id = e.target.id;\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts.filter(contact => contact.id !== id)],\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <Section title=\"Phonebook\">\n          <PhoneBook\n            getContactInfo={this.getContactInfo}\n            contacts={this.state.contacts}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterInput\n            filter={this.state.filter}\n            filterInput={this.filterInput}\n          />\n          <ContactsList\n            contacts={this.contactsFilter()}\n            deleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}